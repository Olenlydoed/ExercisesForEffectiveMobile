Задание №1 Проверĸа мини-приложения бронирования столиĸа
Дано:
Форма бронирования состоит из следующих полей:
• Имя – текстовое поле, обязательное.
• Количество гостей – числовое поле, от 1 до 10.
• Дата брони – выбирается из календаря. Можно забронировать только на будущие даты, максимум за 30 дней вперёд.
• Время – выбирается из выпадающего списка (с 12:00 до 22:00, с шагом 30 мин).
• Комментарий – необязательное поле (до 250 символов).
• Кнопка “Забронировать” – активна, когда обязательные поля заполнены корректно.

1.1. Анализ и уточнение:
Возможные противоречия:
●	Неясно, как система будет обрабатывать бронирования, когда могут быть ограничения или исключения в доступности столиков.
●	Какие ограничения действуют на время бронирования (например, нельзя ли забронировать столик на текущую дату или уже прошедшее время)?
●	Не указано, какие сообщения об ошибках будут отображаться в случае некорректного ввода данных.
●	Не описана возможность отмены бронирования

Уточняющие вопросы к аналитику/менеджеру:
●	Из всех полей только Имя отмечено, как обязательное и Комментарий, как необязательное. Просьба уточнить какие поля являются обязательными для заполнения.
●	Должен ли указываться конкретный столик для бронирования? Так как пользователю может быть важно расположение столика.
●	Количество гостей – Как будет обрабатываться ситуация, если пользователь введет неверное количество гостей (например, 0 или больше 10)?
●	Дата брони - Как должны помечаться пользователю доступные для бронирования даты? Не ясно, как система будет обрабатывать ситуации, когда пользователь пытается забронировать столик на более чем 30 дней вперед.
●	Время - Сколько времени затрачивается на бронирование строго определено или должен указываться временной промежуток?
●	Какие сообщения об ошибках и валидации будут отображаться, если обязательные поля не заполнены или заполнены некорректно?
●	Какой функционал должен быть доступен для пользователей, которые хотят отменить или изменить бронирование?

1.2. Тест-кейсы
1.2.1. Тест-кейс 1: Корректное бронирование
  Описание: Проверка успешного бронирования с корректными данными.
  Шаги:
     1. Ввести имя "Иван".
     2. Ввести число гостей 4.
     3. Выбрать дату 15 дней вперёд.
     4. Выбрать время 14:00.
     5. Нажать "Забронировать".
  Ожидаемый результат: Сообщение об успешном бронировании.

1.2.2. Тест-кейс 2: Бронирование с комментарием
  Описание: Проверка успешного бронирования с добавлением комментария.
  Шаги:
     1. Ввести имя "Елена".
     2. Ввести число гостей 2.
     3. Выбрать дату 10 дней вперёд.
     4. Выбрать время 18:00.
     5. Ввести комментарий "День рождения".
     6. Нажать "Забронировать".
  Ожидаемый результат: Сообщение об успешном бронировании.

1.2.3. Тест-кейс 3: Неверное количество гостей
  Описание: Проверка, что система не позволяет забронировать столик на 0 гостей.
  Шаги:
     1. Ввести имя "Алекс".
     2. Ввести число гостей 0.
     3. Выбрать дату 20 дней вперёд.
     4. Выбрать время 19:00.
     5. Нажать "Забронировать".
  Ожидаемый результат: Сообщение об ошибке: "Количество гостей должно быть от 1 до 10".

1.2.4. Тест-кейс 4: Бронирование на прошедшую дату
  Описание: Проверка, что невозможно выбрать прошедшую дату.
  Шаги:
     1. Ввести имя "Ольга".
     2. Ввести число гостей 3.
     3. Выбрать дату, которая была вчера.
     4. Выбрать время 17:00.
     5. Нажать "Забронировать".
  Ожидаемый результат: Сообщение об ошибке: "Выберите будущую дату".

1.2.5. Тест-кейс 5: Превышение максимального числа символов в комментарии
  Описание: Проверка, что невозможно ввести больше 250 символов в поле комментария.
  Шаги:
     1. Ввести имя "Максим".
     2. Ввести число гостей 2.
     3. Выбрать дату 5 дней вперёд.
     4. Выбрать время 12:30.
     5. Ввести комментарий длиной 300 символов.
     6. Нажать "Забронировать".
  Ожидаемый результат: Сообщение об ошибке: "Комментарий не может превышать 250 символов".

1.3. Баги
1.3.1. Баг 1: Можно выбрать текущую дату и уже прошедшее время
Описание: Пользователь может выбрать текущую дату и прошедшее время.
Приоритет: P1 (Критический)
Обоснование: Позволяет пользователям делать некорректные бронирования, что нарушает бизнес-логику приложения.
Шаги:
  1.	Заполнить обязательные поля(Имя)
  2.	В поле Дата брони ввести текущую дату
  3.	В поле Время выбрать время меньше текущего
  4.	Нажать кнопку Забронировать

Фактический результат: Система дает забронировать выбрав текущую дату и уже прошедшее время.
Ожидаемый результат: Появляется сообщение о некорректном вводе даты и времени.

1.3.2. Баг 2: В поле “Имя” можно ввести только 10 символов
Описание: Ограничение на количество символов в поле имени.
Приоритет: P2 (Высокий)
Обоснование: Чтобы обеспечить полную идентификацию пользователя, стоит позволить вводить более длинные имена, если таковы нужны.
Шаги:
  1.	Ввести в поле Имя значение больше 10 символов. Например, Пантелеймон
  2.	Нажать кнопку Забронировать

Фактический результат: Появляется ошибка бронирования
Ожидаемый результат: В поле “Имя” можно ввести больше 10 символов


1.3.3. Баг 3: Кнопка “Забронировать” активна даже при пустом поле "Имя"
Описание: Кнопка доступна для нажатия, даже если поле "Имя" пустое.
Приоритет: P1 (Критический)
Обоснование: Это приводит к возможным ошибкам при бронировании и нарушает логику валидации формы.
Шаги:
  1.	Поле Имя оставить незаполненным
  2.	Обратить внимание на кнопку Забронировать

Фактический результат: Кнопка Забронировать активна даже при пустом поле Имя
Ожидаемый результат: Кнопка Забронировать не активна при пустом поле Имя

1.3.4. Баг 4: Поле “Комментарий” не имеет ограничения — можно ввести 1000+ символов
Описание: Пользователь может ввести больше 250 символов в поле комментария.
Приоритет: P2 (Высокий)
Обоснование: Это может привести к проблемам с отображением данных и сложности обработки на сервере.
Шаги:
  1.	Заполнить обязательные поля
  2.	В поле Комментарий ввести больше 1000 символов

Фактический результат: В поле Комментарий можно ввести 1000+ символов
Ожидаемый результат: В поле Комментарий можно ввести меньше 250 символов

1.4. Оценка UX и улучшения
1.4.1. Удобство пользователя (UX):
  Улучшение интерфейса: Сделать форму более интерактивной, добавив подсказки и уведомления, которые будут предупреждать пользователя о необходимых полях перед отправкой формы.
1.4.2. Предотвращение ошибок:
  Валидация данных в реальном времени: Реализовать проверку обязательных полей и диапазона значений (например, число гостей) до нажатия кнопки "Забронировать", чтобы предотвратить отправку некорректной информации.
1.4.3. Повышение качества продукта:
  Внедрение системы автоматического тестирования: Разработать набор автоматизированных тестов для проверки функциональности формы и валидации ввода, чтобы гарантировать корректность работы всех функций приложения.
